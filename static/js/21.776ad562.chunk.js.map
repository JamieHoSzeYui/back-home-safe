{"version":3,"sources":["assets/back.svg","components/Header.tsx","assets/realIcon.png","containers/QRGenerator/QRPreview.tsx","containers/QRGenerator/index.tsx"],"names":["Header","name","backPath","Wrapper","to","BackButton","src","back","styled","img","div","QRPreview","data","onLeave","imgRef","useRef","useEffect","current","encodedString","qrEncode","QrCodeWithLogo","image","content","width","logo","customImg","realIcon","logoRadius","borderSize","toImage","PageWrapper","Cross","cross","onClick","MessageWrapper","PlaceWrapper","nameEn","isEmpty","nameZh","StyledPlace","value","readOnly","TickWrapper","TickWrapperInner","StyledQrCode","ref","alt","Address","addressZh","addressEn","Place","QRGenerator","t","useTranslation","fileFieldRef","React","useState","showPreview","setShowPreview","qrCode","setQrCode","useSetState","typeEn","typeZh","type","venueCode","venueID","state","setState","isVenueCodeValid","length","isVenueIdValid","isValidData","ContentWrapper","id","StyledForm","StyledTextField","label","onChange","e","target","error","inputProps","maxLength","StyledInputWrapper","StyledFileInput","accept","files","Array","from","head","reader","FileReader","readAsDataURL","onload","String","result","Divider","Actions","ButtonGroup","aria-label","Button","variant","size","startIcon","downloadImage","disabled","FormGroup","TextField","input"],"mappings":"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","file":"static/js/21.776ad562.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.7bf7a56f.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport back from \"../assets/back.svg\";\n\ntype Props = {\n  name: string;\n  backPath?: string;\n};\n\nexport const Header = ({ name, backPath }: Props) => {\n  return (\n    <Wrapper>\n      {backPath && (\n        <Link to={backPath}>\n          <BackButton src={back} />\n        </Link>\n      )}\n      {name}\n    </Wrapper>\n  );\n};\n\nconst BackButton = styled.img`\n  height: 20px;\n  top: 14px;\n  left: 16px;\n  position: absolute;\n`;\n\nconst Wrapper = styled.div`\n  color: #ffffff;\n  background-color: #12b188;\n  text-align: center;\n  line-height: 48px;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  flex-shrink: 0;\n`;\n","export default __webpack_public_path__ + \"static/media/realIcon.2230efc1.png\";","import { isEmpty } from \"ramda\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Place } from \"../../components/Place\";\nimport cross from \"../../assets/cross.svg\";\n\nimport { EnhancedEncodeParam, qrEncode } from \"../../utils/qr\";\nimport styled from \"styled-components\";\nimport QrCodeWithLogo from \"qrcode-with-logos\";\nimport realIcon from \"../../assets/realIcon.png\";\n\ntype Props = {\n  data: EnhancedEncodeParam;\n  onLeave: () => void;\n};\n\nexport const QRPreview = ({ data, onLeave }: Props) => {\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    if (!imgRef.current) return;\n\n    const encodedString = qrEncode(data);\n\n    new QrCodeWithLogo({\n      image: imgRef.current,\n      content: encodedString,\n      width: 380,\n      logo: {\n        src: data.customImg || realIcon,\n        logoRadius: 8,\n        borderSize: 0,\n      },\n    }).toImage();\n  }, [data]);\n\n  return data ? (\n    <PageWrapper>\n      <Header>\n        <Cross src={cross} onClick={onLeave} />\n      </Header>\n      <MessageWrapper>\n        <PlaceWrapper>\n          {data.nameEn && !isEmpty(data.nameZh) && (\n            <StyledPlace value={data.nameZh || \"\"} readOnly />\n          )}\n          {data.nameEn && !isEmpty(data.nameEn) && (\n            <StyledPlace value={data.nameEn || \"\"} readOnly />\n          )}\n        </PlaceWrapper>\n      </MessageWrapper>\n      <TickWrapper>\n        <TickWrapperInner>\n          <StyledQrCode ref={imgRef} alt=\"qrCode\" />\n        </TickWrapperInner>\n      </TickWrapper>\n      <Address>\n        {data.addressZh && !isEmpty(data.addressZh) && (\n          <div>{data.addressZh}</div>\n        )}\n        {data.addressEn && !isEmpty(data.addressEn) && (\n          <div>{data.addressEn}</div>\n        )}\n      </Address>\n    </PageWrapper>\n  ) : (\n    <></>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  background-color: #12b188;\n  position: absolute;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  flex-shrink: 0;\n`;\n\nconst Cross = styled.img`\n  height: 20px;\n  margin: 24px;\n`;\n\nconst StyledPlace = styled(Place)`\n  font-size: 20px;\n  line-height: 20px;\n  text-shadow: none;\n`;\n\nconst PlaceWrapper = styled.div`\n  padding: 0 32px;\n`;\n\nconst MessageWrapper = styled.div`\n  width: 100%;\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TickWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nconst TickWrapperInner = styled.div`\n  height: 100%;\n  max-height: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledQrCode = styled.img`\n  display: inline-block;\n  height: 100%;\n  max-height: 300px;\n  margin: 0 auto;\n`;\n\nconst Address = styled.div`\n  width: 100%;\n  height: 50%;\n  text-align: center;\n`;\n","import {\n  Button,\n  ButtonGroup,\n  Divider,\n  FormGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport QrCodeWithLogo from \"qrcode-with-logos\";\nimport { head } from \"ramda\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSetState } from \"react-use\";\nimport styled from \"styled-components\";\n\nimport realIcon from \"../../assets/realIcon.png\";\nimport { Header } from \"../../components/Header\";\nimport { EnhancedEncodeParam, qrEncode } from \"../../utils/qr\";\nimport { QRPreview } from \"./QRPreview\";\n\nconst QRGenerator = () => {\n  const { t } = useTranslation(\"qr_generator\");\n  const imgRef = useRef<HTMLImageElement>(null);\n  const fileFieldRef = React.useRef<HTMLInputElement>(null);\n\n  const [showPreview, setShowPreview] = useState(false);\n  const [qrCode, setQrCode] = useState<QrCodeWithLogo | null>(null);\n  const [state, setState] = useSetState<EnhancedEncodeParam>({\n    typeEn: \"Stores/Shopping Malls\",\n    typeZh: \"商店/商場\",\n    nameEn: \"CityWalk\",\n    nameZh: \"荃新天地\",\n    type: \"IMPORT\",\n    venueCode: \"0\",\n    venueID: \"WHBvLDSa\",\n    addressEn: \"1 & 18 Yeung Uk Rd, Tsuen Wan, Hong Kong\",\n    addressZh: \"荃灣楊屋道1號\",\n    customImg: null,\n  });\n\n  const isVenueCodeValid = state.venueCode.length === 1;\n  const isVenueIdValid = state.venueID.length === 8;\n\n  const isValidData = isVenueCodeValid && isVenueIdValid;\n\n  useEffect(() => {\n    if (!imgRef.current || !isValidData) return;\n    const encodedString = qrEncode(state);\n\n    const qrCode = new QrCodeWithLogo({\n      image: imgRef.current,\n      content: encodedString,\n      width: 380,\n      logo: {\n        src: state.customImg || realIcon,\n        logoRadius: 8,\n        borderSize: 0,\n      },\n    });\n\n    qrCode.toImage();\n    setQrCode(qrCode);\n  }, [state, isValidData]);\n\n  const handleFileSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    const img = head(files);\n    if (!img) {\n      setState({ customImg: null });\n    } else {\n      const reader = new FileReader();\n      reader.readAsDataURL(img);\n      reader.onload = () => setState({ customImg: String(reader.result) });\n    }\n  };\n\n  const handleDownload = () => {\n    if (!qrCode) return;\n    qrCode.downloadImage(\"QR Code\");\n  };\n\n  return (\n    <PageWrapper>\n      <Header backPath=\"/\" name={t(\"name\")} />\n      <ContentWrapper id=\"scroll\">\n        <StyledForm>\n          <StyledTextField\n            label={t(\"form.typeZh\")}\n            value={state.typeZh}\n            onChange={(e) => {\n              setState({ typeZh: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.typeEn\")}\n            value={state.typeEn}\n            onChange={(e) => {\n              setState({ typeEn: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.nameZh\")}\n            value={state.nameZh}\n            onChange={(e) => {\n              setState({ nameZh: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.nameEn\")}\n            value={state.nameEn}\n            onChange={(e) => {\n              setState({ nameEn: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.addressZh\")}\n            value={state.addressZh}\n            onChange={(e) => {\n              setState({ addressZh: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.addressEn\")}\n            value={state.addressEn}\n            onChange={(e) => {\n              setState({ addressEn: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.type\")}\n            value={state.type}\n            onChange={(e) => {\n              setState({ type: e.target.value });\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.venue_code\")}\n            value={state.venueCode}\n            onChange={(e) => {\n              setState({ venueCode: e.target.value });\n            }}\n            error={!isVenueCodeValid}\n            inputProps={{\n              maxLength: 1,\n            }}\n          />\n          <StyledTextField\n            label={t(\"form.venue_id\")}\n            value={state.venueID}\n            onChange={(e) => {\n              setState({ venueID: e.target.value });\n            }}\n            error={!isVenueIdValid}\n            inputProps={{\n              maxLength: 8,\n            }}\n          />\n          <StyledInputWrapper>\n            <div>{t(\"form.custom_icon\")}</div>\n            <StyledFileInput\n              type=\"file\"\n              name=\"avatar\"\n              accept=\"image/png, image/jpeg\"\n              ref={fileFieldRef}\n              onChange={handleFileSelected}\n            />\n          </StyledInputWrapper>\n        </StyledForm>\n        <Divider />\n        <Actions>\n          <ButtonGroup aria-label=\"outlined primary button group\">\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<SaveIcon />}\n              onClick={handleDownload}\n              disabled={!isValidData}\n            >\n              {t(\"global:button.save\")}\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<SaveIcon />}\n              onClick={() => {\n                setShowPreview(true);\n              }}\n              disabled={!isValidData}\n            >\n              {t(\"global:button.preview\")}\n            </Button>\n          </ButtonGroup>\n        </Actions>\n        <StyledQrCode ref={imgRef} alt=\"qrCode\" />\n      </ContentWrapper>\n      {showPreview && (\n        <QRPreview\n          data={state}\n          onLeave={() => {\n            setShowPreview(false);\n          }}\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default QRGenerator;\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nconst StyledForm = styled(FormGroup)`\n  padding: 8px 16px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  &.MuiFormControl-root {\n    margin-top: 8px;\n  }\n`;\n\nconst StyledInputWrapper = styled.div`\n  font-size: 12px;\n  padding: 4px 0;\n  color: rgba(0, 0, 0, 0.54);\n`;\n\nconst StyledFileInput = styled.input`\n  padding: 4px 0;\n`;\n\nconst StyledQrCode = styled.img`\n  width: 100%;\n`;\n\nconst Actions = styled.div`\n  margin-top: 16px;\n  display: flex;\n  justify-content: center;\n`;\n"],"sourceRoot":""}